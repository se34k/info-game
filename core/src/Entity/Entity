
public abstract class Entity {
  private float velocity;
  private String name;
  private int hp;

  public Entity(String name, int hp, float velocity, World world, int x, int y) {
    this.name = name;
    this.hp = hp;
    this.velocity = velocity;
    BodyDef bodyDef = new BodyDef();
    bodyDef.type = BodyType.DynamicBody;
    bodyDef.position.set(x, y);
    
    Body body = world.createBody(bodyDef);
    
    CircleShape circle = new CircleShape();
    circle.setRadius(6f);
    
    FixtureDef fixtureDef = new FixtureDef();
    fixtureDef.shape = circle;
    fixtureDef.density = 0.5f;
    fixtureDef.friction = 0.4f;
    fixtureDef.restitution = 0.6f; 
    
    Fixture fixture = body.createFixture(fixtureDef); //Fixture an den Body heften
    
    circle.dispose();
    
    body.setUserData(""); //Enthaelt den Pfad des Sprites    
  }

  public String getName() {
    return name;
  }
  
  public void createTexture(Texture texture){
    Sprite sprite = new Sprite(texture);     
  }

  public int getHP() {
    return hp;
  }

  public void setHP(int hp) {
    this.hp = hp;
  }

  public void changeHPBy(int amount) {
    setHP(hp + amount);
  }

  public Body getBody(){
    return body;
  }

  public abstract float getX(); 

  public abstract float getY();

  public abstract float[] getPos(); 

    /**
     * Can be used to calculate the distance between this entity and another given entity, for example
     * to use in the combat system when checking whether two opponents are near each other
     * 
     * @param entity    The entity to compare to
     * 
     * @return          A float value with the distance between the two entities
     */
  public abstract float distanceTo(Entity entity);
}